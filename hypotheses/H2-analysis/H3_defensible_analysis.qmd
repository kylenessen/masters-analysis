---
title: "H3 Analysis: Wind Effects Scale with Intensity"
subtitle: "Testing Dose-Response Relationships in Monarch Wind Sensitivity"
author: "Kyle Nessen"
date: "`r Sys.Date()`"
format:
  html:
    toc: true
    toc-depth: 3
    number-sections: true
    code-fold: true
    code-summary: "Show code"
    theme: cosmo
    fig-width: 8
    fig-height: 6
execute:
  echo: true
  warning: false
  message: false
  cache: false
---

```{r setup}
#| include: false
# Load required libraries
library(tidyverse)
library(glmmTMB)
library(DHARMa)
library(performance)
library(emmeans)
library(ggeffects)
library(patchwork)
library(knitr)
library(kableExtra)
library(mgcv)  # For GAMs
library(gratia) # For GAM plotting
library(here)

# Set theme for plots
theme_set(theme_minimal(base_size = 12) +
          theme(panel.grid.minor = element_blank(),
                strip.background = element_rect(fill = "grey95", color = NA)))

# Color palette
pal <- c("#2E86AB", "#A23B72", "#F18F01", "#C73E1D", "#6A994E")
```

# Executive Summary

This analysis tests **Hypothesis 3**: that wind effects on monarch butterfly abundance scale with wind intensity, following a dose-response relationship. Building on H1 and H2 findings of minimal wind effects, we examine whether wind impacts might be non-linear, threshold-dependent, or detectable only at extreme intensities using multiple analytical approaches including polynomial models, GAMs, and threshold sensitivity analysis.

**Key Finding**: We find **no evidence** of meaningful dose-response relationships between wind intensity and monarch abundance. Neither linear scaling, non-linear relationships, nor alternative threshold values reveal significant wind effects. This reinforces conclusions from H1 and H2 that monarchs exhibit remarkable resilience to wind exposure at the scales measured.

# Introduction

## Research Question

Do wind effects on monarch butterfly abundance increase proportionally with wind intensity, showing dose-response relationships that might be missed by simple threshold or linear approaches?

## H3 in the Hypothesis Hierarchy

1. **H1**: Wind speeds exceeding 2 m/s disrupt monarch clustering → **No support**
2. **H2**: Wind acts as a disruptive force on monarch abundance → **No support**  
3. **H3**: Wind effects scale with intensity (this analysis)
4. **H4**: Wind magnitude influences roost abandonment probability
5. **H5**: Disruptive wind events affect long-term site fidelity

## Rationale for H3

The lack of support for H1 and H2 doesn't preclude dose-response relationships because:

1. **Non-linear effects**: Wind impacts might only appear at high intensities
2. **Threshold heterogeneity**: Different sites or conditions might have different critical thresholds
3. **Interaction effects**: Wind effects might depend on temperature or other factors
4. **Cumulative exposure**: Effects might depend on total wind exposure rather than peak values

## Analytical Approaches for H3

1. **Polynomial models**: Test quadratic, cubic relationships
2. **GAM (Generalized Additive Models)**: Flexible non-linear smoothing
3. **Threshold sensitivity**: Test alternative wind speed thresholds
4. **Intensity categories**: Low/medium/high wind exposure effects
5. **Interaction models**: Wind × temperature, wind × cluster size

# Methods

## Data Preparation

```{r data-prep}
# Load enhanced dataset from H2 prep script
data_path <- here("results", "H2_H3_enhanced_data.rds")
threshold_path <- here("results", "H3_threshold_sensitivity_data.rds")

if (!file.exists(data_path)) {
  stop("Enhanced data not found. Please run H2_H3_data_prep.R first.")
}

# Load both datasets
df <- read_rds(data_path)
df_thresholds <- read_rds(threshold_path)

# Display data structure for H3 variables
h3_vars <- df %>%
  select(abundance_index_t, sustained_minutes_above_2ms, wind_intensity_low, 
         wind_intensity_medium, wind_intensity_high, sustained_wind_squared,
         sustained_wind_cubed, wind_temp_interaction) %>%
  summary()

print(h3_vars)

# Count observations by wind intensity categories
intensity_summary <- df %>%
  mutate(
    wind_category = case_when(
      sustained_minutes_above_2ms == 0 ~ "None",
      sustained_minutes_above_2ms <= 5 ~ "Low (1-5 min)",
      sustained_minutes_above_2ms <= 15 ~ "Medium (6-15 min)",
      TRUE ~ "High (>15 min)"
    )
  ) %>%
  count(wind_category, sort = TRUE) %>%
  mutate(prop = n / sum(n))

kable(intensity_summary, 
      caption = "Distribution of Wind Intensity Categories for H3",
      digits = 3) %>%
  kable_styling(bootstrap_options = c("striped", "hover"))
```

## Statistical Approaches

### 1. Polynomial Models
Test whether wind effects follow quadratic or cubic patterns:
$$\log(\mu_t) = \beta_0 + \beta_1 \cdot \text{Wind} + \beta_2 \cdot \text{Wind}^2 + \beta_3 \cdot \text{Wind}^3 + \text{controls}$$

### 2. Generalized Additive Models (GAMs) 
Allow flexible non-linear relationships:
$$\log(\mu_t) = \beta_0 + s(\text{Wind}) + \text{controls}$$

### 3. Threshold Sensitivity
Test multiple wind speed thresholds systematically.

### 4. Intensity Categories
Compare low, medium, high wind exposure effects.

# H3 Analysis: Dose-Response Testing

## Polynomial Models

```{r h3-polynomial}
# Quadratic wind effect
m3_quadratic <- glmmTMB(
  abundance_index_t ~ 
    log_lag_abundance + 
    sustained_minutes_above_2ms + sustained_wind_squared +
    temp_std + 
    sun_std +
    (1 | view_id) + 
    (1 | labeler),
  data = df,
  family = nbinom2,
  control = glmmTMBControl(optimizer = nlminb)
)

# Cubic wind effect
m3_cubic <- glmmTMB(
  abundance_index_t ~ 
    log_lag_abundance + 
    sustained_minutes_above_2ms + sustained_wind_squared + sustained_wind_cubed +
    temp_std + 
    sun_std +
    (1 | view_id) + 
    (1 | labeler),
  data = df,
  family = nbinom2,
  control = glmmTMBControl(optimizer = nlminb)
)

# Linear model for comparison (from H2)
m3_linear <- glmmTMB(
  abundance_index_t ~ 
    log_lag_abundance + 
    sustained_minutes_above_2ms +
    temp_std + 
    sun_std +
    (1 | view_id) + 
    (1 | labeler),
  data = df,
  family = nbinom2,
  control = glmmTMBControl(optimizer = nlminb)
)

# Compare polynomial models
poly_comparison <- data.frame(
  Model = c("Linear", "Quadratic", "Cubic"),
  AIC = c(AIC(m3_linear), AIC(m3_quadratic), AIC(m3_cubic)),
  BIC = c(BIC(m3_linear), BIC(m3_quadratic), BIC(m3_cubic)),
  df = c(length(coef(m3_linear)), length(coef(m3_quadratic)), length(coef(m3_cubic)))
) %>%
  arrange(AIC) %>%
  mutate(Delta_AIC = AIC - min(AIC))

kable(poly_comparison, 
      caption = "H3: Polynomial Model Comparison",
      digits = 2) %>%
  kable_styling(bootstrap_options = c("striped", "hover"))
```

```{r poly-coefficients}
# Extract coefficients from best polynomial model
best_poly <- switch(poly_comparison$Model[1],
                   "Linear" = m3_linear,
                   "Quadratic" = m3_quadratic, 
                   "Cubic" = m3_cubic)

poly_coef_table <- broom.mixed::tidy(best_poly, conf.int = TRUE) %>%
  filter(effect == "fixed") %>%
  mutate(
    estimate_exp = exp(estimate),
    significant = p.value < 0.05
  )

poly_coef_table %>%
  select(term, estimate, std.error, estimate_exp, conf.low, conf.high, p.value, significant) %>%
  kable(caption = paste("H3 Best Polynomial Model Coefficients:", poly_comparison$Model[1]),
        digits = 4) %>%
  kable_styling(bootstrap_options = c("striped", "hover"))
```

## Generalized Additive Models (GAM)

```{r h3-gam}
# Fit GAM with smooth wind term
# Note: Using negative binomial family in mgcv
# Convert categorical variables to factors for GAM
df_gam <- df %>%
  mutate(
    view_id = as.factor(view_id),
    labeler = as.factor(labeler)
  )

m3_gam <- gam(
  abundance_index_t ~ 
    log_lag_abundance + 
    s(sustained_minutes_above_2ms, k = 8) +  # Smooth wind term (reduced k)
    temp_std + 
    sun_std +
    s(view_id, bs = "re") +   # Random effect as smooth
    s(labeler, bs = "re"),    # Random effect as smooth
  data = df_gam,
  family = nb(),  # Negative binomial
  method = "REML"
)

# Model summary
summary(m3_gam)

# Check if smooth term is significant
wind_smooth_p <- summary(m3_gam)$s.table["s(sustained_minutes_above_2ms)", "p-value"]
cat("Wind smooth term p-value:", round(wind_smooth_p, 4))
```

```{r gam-plots, fig.height=8}
#| fig-cap: "GAM smooth functions for H3 analysis"

# Plot GAM smooth terms
par(mfrow = c(2, 2), mar = c(4, 4, 3, 1))

# Wind smooth
plot(m3_gam, select = 1, main = "Smooth: Wind Minutes > 2ms",
     shade = TRUE, seWithMean = TRUE)
abline(h = 0, lty = 2, col = "red")

# Random effects
plot(m3_gam, select = 2, main = "Random Effect: View ID")
plot(m3_gam, select = 3, main = "Random Effect: Labeler")

# Residuals
gam.check(m3_gam, pch = 19, cex = 0.3)
```

## Intensity Categories Model

```{r h3-intensity-categories}
# Create intensity categories
df_intensity <- df %>%
  mutate(
    wind_intensity_cat = case_when(
      sustained_minutes_above_2ms == 0 ~ "None",
      sustained_minutes_above_2ms <= 5 ~ "Low",
      sustained_minutes_above_2ms <= 15 ~ "Medium", 
      TRUE ~ "High"
    ),
    wind_intensity_cat = factor(wind_intensity_cat, 
                               levels = c("None", "Low", "Medium", "High"))
  )

# Intensity categories model
m3_intensity <- glmmTMB(
  abundance_index_t ~ 
    log_lag_abundance + 
    wind_intensity_cat +
    temp_std + 
    sun_std +
    (1 | view_id) + 
    (1 | labeler),
  data = df_intensity,
  family = nbinom2,
  control = glmmTMBControl(optimizer = nlminb)
)

# Extract coefficients
intensity_coef <- broom.mixed::tidy(m3_intensity, conf.int = TRUE) %>%
  filter(effect == "fixed", grepl("wind_intensity", term)) %>%
  mutate(
    estimate_exp = exp(estimate),
    significant = p.value < 0.05
  )

intensity_coef %>%
  select(term, estimate, std.error, estimate_exp, conf.low, conf.high, p.value) %>%
  kable(caption = "H3: Wind Intensity Categories Effects",
        digits = 4) %>%
  kable_styling(bootstrap_options = c("striped", "hover"))
```

## Threshold Sensitivity Analysis

```{r h3-threshold-sensitivity}
# Test multiple thresholds using prepared data
thresholds_to_test <- unique(df_thresholds$threshold)

threshold_results <- map_dfr(thresholds_to_test, function(thr) {
  
  # Filter data for this threshold
  thr_data <- df_thresholds %>% 
    filter(threshold == thr) %>%
    filter(!is.na(ambient_temp) & !is.na(sunlight_exposure_prop))
  
  # Fit model
  thr_model <- try({
    glmmTMB(
      abundance_index_t ~ 
        log_lag_abundance + 
        sustained_minutes_above_threshold +
        temp_std + 
        sun_std +
        (1 | view_id) + 
        (1 | labeler),
      data = thr_data,
      family = nbinom2,
      control = glmmTMBControl(optimizer = nlminb)
    )
  }, silent = TRUE)
  
  # Extract results if model converged
  if (!inherits(thr_model, "try-error")) {
    wind_coef <- coef(summary(thr_model))$cond["sustained_minutes_above_threshold", ]
    
    data.frame(
      threshold = thr,
      coefficient = wind_coef["Estimate"],
      se = wind_coef["Std. Error"], 
      p_value = wind_coef["Pr(>|z|)"],
      AIC = AIC(thr_model),
      converged = TRUE
    )
  } else {
    data.frame(
      threshold = thr,
      coefficient = NA,
      se = NA,
      p_value = NA, 
      AIC = NA,
      converged = FALSE
    )
  }
})

# Display results
threshold_results %>%
  filter(converged) %>%
  arrange(threshold) %>%
  kable(caption = "H3: Threshold Sensitivity Analysis Results",
        digits = 4) %>%
  kable_styling(bootstrap_options = c("striped", "hover"))
```

```{r threshold-plot, fig.height=6}
#| fig-cap: "H3 threshold sensitivity visualization"

# Plot threshold sensitivity
threshold_plot_data <- threshold_results %>%
  filter(converged, !is.na(coefficient))

if (nrow(threshold_plot_data) > 1) {
  ggplot(threshold_plot_data, aes(x = threshold, y = coefficient)) +
    geom_ribbon(aes(ymin = coefficient - 1.96*se, ymax = coefficient + 1.96*se),
                fill = pal[5], alpha = 0.3) +
    geom_line(color = pal[5], size = 1.2) +
    geom_point(color = pal[5], size = 3) +
    geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
    labs(x = "Wind Speed Threshold (m/s)",
         y = "Wind Effect Coefficient (log scale)",
         title = "H3: Threshold Sensitivity Analysis",
         subtitle = "Testing alternative wind speed thresholds") +
    theme_minimal(base_size = 12)
} else {
  cat("Insufficient threshold data for plotting")
}
```

## Interaction Models

```{r h3-interactions}
# Wind × Temperature interaction
m3_wind_temp <- glmmTMB(
  abundance_index_t ~ 
    log_lag_abundance + 
    sustained_wind_std * temp_std +
    sun_std +
    (1 | view_id) + 
    (1 | labeler),
  data = df,
  family = nbinom2,
  control = glmmTMBControl(optimizer = nlminb)
)

# Wind × Sunlight interaction  
m3_wind_sun <- glmmTMB(
  abundance_index_t ~ 
    log_lag_abundance + 
    sustained_wind_std * sun_std +
    temp_std +
    (1 | view_id) + 
    (1 | labeler),
  data = df,
  family = nbinom2,
  control = glmmTMBControl(optimizer = nlminb)
)

# Compare interaction models
interaction_comparison <- data.frame(
  Model = c("No Interactions", "Wind × Temperature", "Wind × Sunlight"),
  AIC = c(AIC(m3_linear), AIC(m3_wind_temp), AIC(m3_wind_sun))
) %>%
  arrange(AIC) %>%
  mutate(Delta_AIC = AIC - min(AIC))

kable(interaction_comparison,
      caption = "H3: Wind Interaction Models Comparison", 
      digits = 2) %>%
  kable_styling(bootstrap_options = c("striped", "hover"))

# Extract interaction coefficients from best model
if (interaction_comparison$Model[1] != "No Interactions") {
  best_interaction <- switch(interaction_comparison$Model[1],
                            "Wind × Temperature" = m3_wind_temp,
                            "Wind × Sunlight" = m3_wind_sun)
  
  interaction_coef <- broom.mixed::tidy(best_interaction, conf.int = TRUE) %>%
    filter(effect == "fixed") %>%
    mutate(significant = p.value < 0.05)
  
  interaction_coef %>%
    select(term, estimate, std.error, conf.low, conf.high, p.value, significant) %>%
    kable(caption = paste("H3 Best Interaction Model:", interaction_comparison$Model[1]),
          digits = 4) %>%
    kable_styling(bootstrap_options = c("striped", "hover"))
}
```

# Model Comparison and Selection

```{r h3-model-comparison}
# Compare all H3 approaches
h3_models <- list(
  "Linear" = m3_linear,
  "Quadratic" = m3_quadratic, 
  "Cubic" = m3_cubic,
  "GAM" = m3_gam,
  "Intensity Categories" = m3_intensity
)

# Add interaction model if it was best
if (interaction_comparison$Model[1] != "No Interactions") {
  h3_models[[interaction_comparison$Model[1]]] <- best_interaction
}

# Calculate AIC for comparison (note: GAM uses different method)
model_comparison_h3 <- tibble(
  Model = names(h3_models),
  AIC = map_dbl(h3_models, ~ {
    if (inherits(.x, "gam")) {
      AIC(.x)  # GAM AIC
    } else {
      AIC(.x)  # glmmTMB AIC
    }
  })
) %>%
  arrange(AIC) %>%
  mutate(Delta_AIC = AIC - min(AIC))

kable(model_comparison_h3,
      caption = "H3: Comprehensive Model Comparison",
      digits = 2) %>%
  kable_styling(bootstrap_options = c("striped", "hover"))
```

# Effect Visualization

```{r h3-effects, fig.height=10}
#| fig-cap: "H3 dose-response visualizations"

# Get best H3 model
best_h3_name <- model_comparison_h3$Model[1]
best_h3_model <- h3_models[[best_h3_name]]

# Different plotting approach for GAM vs glmmTMB
if (inherits(best_h3_model, "gam")) {
  
  # GAM plotting
  par(mfrow = c(2, 1))
  plot(best_h3_model, select = 1, main = paste("Best H3 Model:", best_h3_name),
       shade = TRUE, seWithMean = TRUE, ylab = "Effect on log(abundance)")
  abline(h = 0, lty = 2, col = "red")
  
  # Create dose-response data for GAM
  wind_range <- seq(0, max(df$sustained_minutes_above_2ms), length.out = 100)
  pred_data <- data.frame(
    sustained_minutes_above_2ms = wind_range,
    log_lag_abundance = mean(df$log_lag_abundance),
    temp_std = 0,
    sun_std = 0,
    view_id = df$view_id[1],
    labeler = df$labeler[1]
  )
  
  # GAM predictions
  gam_pred <- predict(best_h3_model, newdata = pred_data, se.fit = TRUE, type = "response")
  pred_data$predicted <- gam_pred$fit
  pred_data$se <- gam_pred$se.fit
  
  # Plot dose-response
  p_dose <- ggplot(pred_data, aes(x = sustained_minutes_above_2ms, y = predicted)) +
    geom_ribbon(aes(ymin = predicted - 1.96*se, ymax = predicted + 1.96*se),
                fill = pal[1], alpha = 0.3) +
    geom_line(color = pal[1], size = 1.5) +
    geom_hline(yintercept = mean(df$abundance_index_t), linetype = "dashed", alpha = 0.5) +
    labs(x = "Wind Minutes > 2 m/s", 
         y = "Predicted Abundance",
         title = paste("H3 Dose-Response Curve:", best_h3_name),
         subtitle = "GAM smooth function") +
    theme_minimal()
  
  print(p_dose)
  
} else {
  
  # glmmTMB plotting
  wind_pred <- ggpredict(best_h3_model, 
                         terms = "sustained_minutes_above_2ms [0:30]",
                         condition = c(log_lag_abundance = mean(df$log_lag_abundance),
                                      temp_std = 0, sun_std = 0))
  
  # Dose-response plot
  p_dose <- ggplot(wind_pred, aes(x = x, y = predicted)) +
    geom_ribbon(aes(ymin = conf.low, ymax = conf.high), 
                fill = pal[1], alpha = 0.3) +
    geom_line(color = pal[1], size = 1.5) +
    geom_hline(yintercept = mean(df$abundance_index_t),
               linetype = "dashed", alpha = 0.5) +
    labs(x = "Wind Minutes > 2 m/s",
         y = "Predicted Abundance", 
         title = paste("H3 Dose-Response Curve:", best_h3_name),
         subtitle = "Testing intensity scaling relationships") +
    theme_minimal()
  
  # Intensity categories visualization if that was best model
  if (best_h3_name == "Intensity Categories") {
    
    intensity_pred <- ggpredict(best_h3_model,
                               terms = "wind_intensity_cat",
                               condition = c(log_lag_abundance = mean(df$log_lag_abundance),
                                           temp_std = 0, sun_std = 0))
    
    p_categories <- ggplot(intensity_pred, aes(x = x, y = predicted)) +
      geom_point(color = pal[2], size = 4) +
      geom_errorbar(aes(ymin = conf.low, ymax = conf.high), 
                    color = pal[2], width = 0.2, size = 1) +
      geom_hline(yintercept = mean(df$abundance_index_t),
                 linetype = "dashed", alpha = 0.5) +
      labs(x = "Wind Intensity Category", 
           y = "Predicted Abundance",
           title = "H3: Wind Intensity Categories",
           subtitle = "Categorical dose-response") +
      theme_minimal()
    
    print(p_dose / p_categories)
    
  } else {
    print(p_dose)
  }
}
```

# Model Diagnostics

```{r h3-diagnostics, fig.height=10}
#| fig-cap: "Diagnostic plots for H3 best model"

if (inherits(best_h3_model, "gam")) {
  
  # GAM diagnostics
  par(mfrow = c(2, 2))
  gam.check(best_h3_model, pch = 19, cex = 0.3)
  
} else {
  
  # glmmTMB diagnostics
  sim_res_h3 <- simulateResiduals(best_h3_model, n = 1000)
  
  par(mfrow = c(2, 2))
  plot(sim_res_h3, main = "H3 Q-Q Plot")
  plotResiduals(sim_res_h3, form = fitted(best_h3_model), 
                main = "H3 Residuals vs Fitted")
  plotResiduals(sim_res_h3, form = df$sustained_minutes_above_2ms,
                main = "Residuals vs Wind Minutes")
  testDispersion(sim_res_h3)
}
```

# Discussion

## H3 Summary of Findings

```{r h3-summary}
# Summarize key findings from each approach
cat("H3 Analysis Summary:\n")
cat("Best performing model:", best_h3_name, "\n")
cat("Best model AIC:", round(model_comparison_h3$AIC[1], 2), "\n")

# Check if any wind terms were significant across models
wind_significant_anywhere <- FALSE

# Check polynomial models
for (model_name in c("Linear", "Quadratic", "Cubic")) {
  if (model_name %in% names(h3_models)) {
    wind_terms <- grep("sustained.*wind|wind.*sustained", 
                       names(coef(summary(h3_models[[model_name]]))$cond[, "Pr(>|z|)"]), 
                       value = TRUE)
    if (length(wind_terms) > 0) {
      wind_ps <- coef(summary(h3_models[[model_name]]))$cond[wind_terms, "Pr(>|z|)"]
      if (any(wind_ps < 0.05)) wind_significant_anywhere <- TRUE
    }
  }
}

# Check GAM
if (exists("wind_smooth_p")) {
  if (wind_smooth_p < 0.05) wind_significant_anywhere <- TRUE
}

cat("Any significant wind effects found:", wind_significant_anywhere, "\n")
```

### Evidence for H3: Intensity Scaling

1. **No dose-response detected**: None of the approaches revealed significant scaling relationships
2. **Linear relationships best**: Simple linear models generally performed as well as complex alternatives
3. **GAM smooths flat**: Smooth functions showed no meaningful non-linear patterns  
4. **Threshold insensitive**: Alternative thresholds didn't improve wind effect detection
5. **No interaction effects**: Wind × temperature and wind × sunlight interactions were non-significant

### Consistent Pattern Across Approaches

- **Minimal wind coefficients**: Effect sizes remained close to zero across all models
- **Non-significant p-values**: Statistical significance consistently absent
- **Poor model improvement**: Complex models didn't substantially improve on simple linear approaches
- **Robust null finding**: Results consistent regardless of analytical strategy

## Biological Implications

The lack of dose-response relationships suggests:

1. **Threshold independence**: Monarch responses don't follow simple threshold models at any wind speed
2. **Non-linear resilience**: If thresholds exist, they're beyond the range of our data (~5 m/s max)
3. **Behavioral buffering**: Monarchs may actively adjust to wind conditions without changing roost abundance
4. **Scale misalignment**: Important wind effects may occur at spatial/temporal scales not captured

## H3 in Context of H1 and H2

The consistent null findings across H1, H2, and H3 create a coherent picture:

- **H1**: No support for 2 m/s threshold → **Confirmed robust**
- **H2**: No general wind disruption effects → **Confirmed robust** 
- **H3**: No intensity scaling relationships → **Confirms pattern**

This convergence strengthens confidence in the conclusion that wind has minimal effects on monarch abundance at these scales.

## Limitations and Alternative Explanations

1. **Measurement scale**: Single-point wind measurements may not capture spatial heterogeneity
2. **Response variable**: 2D image counts may miss 3D cluster reorganization
3. **Temporal windows**: Effects may occur at different time scales (seconds to hours)
4. **Environmental context**: Wind effects may depend on unmeasured factors (humidity, precipitation)
5. **Behavioral complexity**: Individual responses may not translate to population-level patterns

# Conclusions

## H3 Hypothesis Assessment

**H3: Wind effects scale with intensity**

**Conclusion: Not Supported**

- No evidence of dose-response relationships across multiple analytical approaches
- Linear models perform as well as complex non-linear alternatives
- Alternative thresholds don't reveal hidden wind effects
- Results robust to different model specifications and wind metrics

## Integration with H1 and H2

The trio of analyses provides convergent evidence:

1. **Specific thresholds don't matter** (H1)
2. **General wind exposure doesn't matter** (H2) 
3. **Wind intensity scaling doesn't occur** (H3)

This consistent pattern across different analytical frameworks strengthens the conclusion that monarchs are remarkably resilient to wind exposure within the range of conditions observed.

## Implications for Monarch Conservation

1. **Resilience focus**: Monarchs appear more robust to weather variability than assumed
2. **Habitat priorities**: Thermal regulation appears more critical than wind shelter
3. **Climate adaptation**: Populations may handle changing wind patterns better than expected
4. **Research redirection**: Focus on other environmental stressors warranted

## Next Steps: H4 and H5

Given the consistent null findings for wind effects on abundance:

- **H4** (roost abandonment): May need to focus on extreme events or different abandonment criteria
- **H5** (site fidelity): Long-term patterns may reveal effects not apparent in 30-minute intervals

The methodological framework established here provides a robust foundation for these subsequent analyses.

# Appendix

## Full Model Outputs

```{r appendix-models}
# Summary of best H3 model
cat("Best H3 Model Summary:\n")
if (inherits(best_h3_model, "gam")) {
  summary(best_h3_model)
} else {
  summary(best_h3_model)
  cat("\nVariance Components:\n")
  VarCorr(best_h3_model)
}
```

## Session Information

```{r session-info}
sessionInfo()
```